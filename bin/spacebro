#! /usr/bin/env node

'use strict'

process.env.SPACEBRO_BIN = true

const spacebro = require('../')
const program = require('commander')
const pkg = require('../package.json')
const path = require('path')

program
  .version(pkg.version)
  .usage('[options]')
  .option('-S, --servicename [value]', 'give the service a name')
  .option('-P, --port <n>', 'give a port to spacebro')
  .option('-M, --mute', 'option to hide informations')
  .option('--semiverbose', 'do not show events datas in logs')
  .option('-H, --hidedashboard', 'Allow to hide dashboard')
  .option('-C, --config [path]', 'give a path to config.json file')

program.name = 'spacebro'

program.on('-h, --help', function () {
  console.log('  Examples:')
  console.log('')
  console.log('    $ spacebro --servicename spacebro --port 8888')
  console.log('    $ spacebro --config ./config.json')
  console.log('')
})

// init command
program.parse(process.argv)

const config = program.config
  ? require(path.resolve(process.cwd(), program.config))
  : {}

config.showdashboard = config.showdashboard || true
config.showdashboard = (!program.hidedashboard) ? config.showdashboard : false

config.server = config.server || {}
config.server.port = (!config.server || !config.server.port) ? 8888 : config.server.port
config.server.port = (!program.port) ? config.server.port : Number(program.port)
config.server.serviceName = (!config.server || !config.server.serviceName) ? 'spacebro' : config.server.serviceName
config.server.serviceName = program.servicename || config.server.serviceName

config.verbose = config.verbose || true
config.verbose = (!program.mute) ? config.verbose : false

config.semiverbose = program.semiverbose || config.semiverbose

spacebro.init(config)
